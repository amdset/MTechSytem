@page "/update/{id:int}"
@using MTechSytem.Data
@using MTechSytem.Models
@inject EmployeeService _employeeService
@inject NavigationManager navManager

@if(_employee is null){
    <p><em>Loading...</em></p>
}else{
    <h2>Employee:@_employee.RFC</h2>
    <div class="row justify-content-center create-form">
        <div class="col-xl-8 col-lg-10 form-layout">
            <div class="close-button-section">
                <button class="btn btn-close" @onclick="ClosePage"></button>
                <EditForm Model="_employee" OnValidSubmit="UpdateCurrentEmployee">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div>
                        <label>
                            Name
                            <InputText @bind-Value="_employee.Name" />
                        </label>
                    </div>
                    <div>
                        <label>
                            Last Name
                            <InputText @bind-Value="_employee.LastName" />
                        </label>
                    </div>
                    <div>
                        <label>
                            Born Date
                            <InputDate @bind-Value="_employee.BornDate" />
                        </label>
                    </div>
                    <div>
                        <label>
                            Status
                            <InputSelect @bind-Value="_employee.Status">
                                @foreach (var status in Enum.GetValues(typeof(EmployeeStatus)))
                                {
                                    <option value="@status">@status</option>
                                }
                            </InputSelect>
                        </label>
                    </div>
                    <button type="submit">Update</button>
                </EditForm>
                <p class="alert alert-success">@msgResult</p>
            </div>

        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }
    private Employee _employee;
    private string msgResult = "";

    protected async override Task OnInitializedAsync()
    {
        _employee = await _employeeService.GetEmployeeById(Id);
    }

    private async Task UpdateCurrentEmployee()
    {
        var result = await _employeeService.UpdateEmployee(Id, _employee);
        if (result== System.Net.HttpStatusCode.OK)
        {
            msgResult = "¡Employee updated successfully!";            
        }
    }

    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }
}
